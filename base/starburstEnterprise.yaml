apiVersion: charts.starburstdata.com/v1alpha1
kind: StarburstEnterprise
metadata:
  name: sb
  namespace: vm
  finalizers:
    - helm.sdk.operatorframework.io/uninstall-release
spec:
  extraSecret:
    file: null
    name: null
  cache:
    diskUsagePercentage: 80
    enabled: false
    ttl: 7d
    volume:
      emptyDir: {}
  usageMetrics:
    enabled: true
    reporter:
      configFiles:
        config.json: ''
      enabled: false
      image:
        pullPolicy: IfNotPresent
        repository: harbor.starburstdata.net/testing/usage-metrics-reporter
        tag: 0.1.3-alpha
    usageClient:
      initialDelay: 1m
      interval: 1m
  imagePullSecrets: null
  starburst-charts-common:
    global: {}
  expose:
    clusterIp:
      name: starburst
      ports:
        http:
          port: 8080
    ingress:
      annotations: {}
      host: null
      ingressClassName: null
      ingressName: coordinator-ingress
      path: /
      serviceName: starburst
      servicePort: 8080
      tls:
        enabled: true
        secretName: null
    loadBalancer:
      IP: ''
      annotations: {}
      name: starburst
      ports:
        http:
          port: 8080
      sourceRanges: []
    nodePort:
      extraLabels: {}
      name: starburst
      ports:
        http:
          nodePort: 30080
          port: 8080
    type: clusterIp
  userDatabase:
    enabled: false
    users:
      - password: 46991b33f7a75ff79213c0dc0e610610
        username: admin
  extraArguments: []
  readinessProbe:
    exec:
      command:
        - /bin/sh
        - '-c'
        - >-
          curl --max-time 5 -s http://localhost:8080/v1/info | grep
          \"starting\":false
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 30
  query:
    maxConcurrentQueries: 3
  prometheus:
    agent:
      config: /etc/starburst/telemetry/prometheus.yaml
      port: 8081
      version: 0.15.0
    enabled: true
    rules:
      - attrNameSnakeCase: true
        name: $1
        pattern: trino.execution<name=QueryManager><>(running_queries|queued_queries)
        type: GAUGE
      - name: failed_queries
        pattern: trino.execution<name=QueryManager><>FailedQueries\.TotalCount
        type: COUNTER
  commonLabels: {}
  initImage:
    pullPolicy: IfNotPresent
    repository: registry.connect.redhat.com/starburst/starburst-enterprise-init
    tag: 356.5.2-ubi
  initFile: ''
  livenessProbe:
    exec:
      command:
        - /bin/sh
        - '-c'
        - >-
          curl --max-time 5 -s http://localhost:8080/v1/info | grep
          \"starting\":false
    failureThreshold: 1
    initialDelaySeconds: 300
    periodSeconds: 300
    timeoutSeconds: 30
  securityContext: {}
  coordinator:
    nodeSelector: {}
    heapHeadroomPercentage: 30
    etcFiles:
      jvm.config: |
        -server
        -XX:-UseBiasedLocking
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=32M
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:-OmitStackTraceInFastThrow
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.nio.maxCachedBufferSize=2000000
        -Djdk.attach.allowAttachSelf=true
      other: {}
      properties:
        config.properties: >
          # When enabling TLS for internal communication don't set
          node.internal-address since

          # it'll be set automatically to coordinator.<namespace>.svc.

          # Add DNS:starburst, DNS:coordinator.<namespace>.svc and
          DNS:*.worker.<namespace>.svc as SAN in your certs

          coordinator=true

          node-scheduler.include-coordinator=false

          http-server.http.port=8080

          discovery-server.enabled=true

          discovery.uri=http://localhost:8080
        log.properties: |
          # Enable verbose logging from Starburst Enterprise
          #io.trino=DEBUG
          #com.starburstdata.presto=DEBUG
        node.properties: |
          node.environment={{ include "starburst.environment" . }}
          node.data-dir=/data/starburst
          plugin.dir=/usr/lib/starburst/plugin
          node.server-log-file=/var/log/starburst/server.log
          node.launcher-log-file=/var/log/starburst/launcher.log
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 100M
    heapSizePercentage: 90
    affinity: {}
    envFrom: []
    additionalProperties: ''
    tolerations: []
    nodeMemoryHeadroom: 1Gi
    priorityClassName: null
    deploymentAnnotations: {}
    podAnnotations: {}
  additionalVolumes: []
  environment: null
  sharedSecret: null
  spilling:
    enabled: false
    volume:
      emptyDir: {}
  externalSecrets:
    enabled: false
    goDaddy:
      backendType: secretsManager
    secretPrefix: external0
    type: goDaddy
  catalogs:
    prometheus: |-
      connector.name=prometheus
      prometheus.uri=http://vmselect-simple-vm.apps.ocp4.rhpg.org
      prometheus.query.chunk.size.duration=1d
      prometheus.max.query.range.duration=21d
      prometheus.cache.ttl=30s
    tpch: |-
      connector.name=tpch
      tpch.splits-per-node=4
  image:
    pullPolicy: IfNotPresent
    repository: registry.connect.redhat.com/starburst/starburst-enterprise
    tag: 356-e.5-ubi
  internal:
    ports:
      http:
        port: 8080
      https:
        port: 8443
  worker:
    nodeSelector: {}
    heapHeadroomPercentage: 30
    etcFiles:
      jvm.config: |
        -server
        -XX:-UseBiasedLocking
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=32M
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:-OmitStackTraceInFastThrow
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.nio.maxCachedBufferSize=2000000
        -Djdk.attach.allowAttachSelf=true
      other: {}
      properties:
        config.properties: >
          # When enabling TLS for internal communication don't set
          node.internal-address since

          # it'll be set automatically to <pod-ip>.worker.<namespace>.svc.

          # Add DNS:starburst, DNS:coordinator.<namespace>.svc and
          DNS:*.worker.<namespace>.svc as SAN in your certs

          coordinator=false

          http-server.http.port=8080

          discovery.uri=http://{{ include "starburst.service.name" . }}:8080
        log.properties: |
          # Enable verbose logging from Starburst Enterprise
          #io.trino=DEBUG
          #com.starburstdata.presto=DEBUG
        node.properties: |
          node.environment={{ include "starburst.environment" . }}
          node.data-dir=/data/starburst
          plugin.dir=/usr/lib/starburst/plugin
          node.server-log-file=/var/log/starburst/server.log
          node.launcher-log-file=/var/log/starburst/launcher.log
    deploymentTerminationGracePeriodSeconds: 300
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 100M
    heapSizePercentage: 90
    affinity: {}
    starburstWorkerShutdownGracePeriodSeconds: 120
    envFrom: []
    autoscaling:
      enabled: false
      maxReplicas: 100
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
    additionalProperties: ''
    replicas: 2
    tolerations: []
    nodeMemoryHeadroom: 1Gi
    priorityClassName: null
    deploymentAnnotations: {}
    podAnnotations: {}
  registryCredentials:
    enabled: false
    password: null
    registry: registry.connect.redhat.com
    username: null